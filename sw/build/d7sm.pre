
# 1 "F:\fgr\16gb\libSwPic\libSwPic\disp7segMux\20220922\d7sm.c"

# 19 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\pic16f887.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char PORTC @ 0x007;

# 30
volatile unsigned char PORTE @ 0x009;
volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;
volatile unsigned char PIR2 @ 0x00D;
volatile unsigned char TMR1L @ 0x00E;
volatile unsigned char TMR1H @ 0x00F;
unsigned char T1CON @ 0x010;
volatile unsigned char TMR2 @ 0x011;
unsigned char T2CON @ 0x012;
volatile unsigned char SSPBUF @ 0x013;
volatile unsigned char SSPCON @ 0x014;
volatile unsigned char CCPR1L @ 0x015;
volatile unsigned char CCPR1H @ 0x016;
volatile unsigned char CCP1CON @ 0x017;
volatile unsigned char RCSTA @ 0x018;
volatile unsigned char TXREG @ 0x019;
volatile unsigned char RCREG @ 0x01A;
volatile unsigned char CCPR2L @ 0x01B;
volatile unsigned char CCPR2H @ 0x01C;
volatile unsigned char CCP2CON @ 0x01D;
volatile unsigned char ADRESH @ 0x01E;
volatile unsigned char ADCON0 @ 0x01F;
unsigned char OPTION @ 0x081;
volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char TRISC @ 0x087;

# 60
volatile unsigned char TRISE @ 0x089;
unsigned char PIE1 @ 0x08C;
unsigned char PIE2 @ 0x08D;
volatile unsigned char PCON @ 0x08E;
volatile unsigned char OSCCON @ 0x08F;
unsigned char OSCTUNE @ 0x090;
volatile unsigned char SSPCON2 @ 0x091;
unsigned char PR2 @ 0x092;
unsigned char SSPADD @ 0x093;
unsigned char SSPMSK @ 0x093;
volatile unsigned char SSPSTAT @ 0x094;
unsigned char WPUB @ 0x095;
unsigned char IOCB @ 0x096;
unsigned char VRCON @ 0x097;
volatile unsigned char TXSTA @ 0x098;
unsigned char SPBRG @ 0x099;
unsigned char SPBRGH @ 0x09A;
volatile unsigned char PWM1CON @ 0x09B;
volatile unsigned char ECCPAS @ 0x09C;
volatile unsigned char PSTRCON @ 0x09D;
volatile unsigned char ADRESL @ 0x09E;
unsigned char ADCON1 @ 0x09F;
volatile unsigned char WDTCON @ 0x105;
volatile unsigned char CM1CON0 @ 0x107;
volatile unsigned char CM2CON0 @ 0x108;
volatile unsigned char CM2CON1 @ 0x109;
volatile unsigned char EEDAT @ 0x10C;

volatile unsigned char EEDATA @ 0x10C;
volatile unsigned char EEADR @ 0x10D;

volatile unsigned char EEADRL @ 0x10D;
volatile unsigned char EEDATH @ 0x10E;
volatile unsigned char EEADRH @ 0x10F;
volatile unsigned char SRCON @ 0x185;
volatile unsigned char BAUDCTL @ 0x187;
unsigned char ANSEL @ 0x188;
unsigned char ANSELH @ 0x189;
volatile unsigned char EECON1 @ 0x18C;
volatile unsigned char EECON2 @ 0x18D;



volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
bit RP0 @ ((unsigned)&STATUS*8)+5;
bit RP1 @ ((unsigned)&STATUS*8)+6;
bit IRP @ ((unsigned)&STATUS*8)+7;


volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;


volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;


volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;

# 158
volatile bit RE3 @ ((unsigned)&PORTE*8)+3;


volatile bit RBIF @ ((unsigned)&INTCON*8)+0;

volatile bit RABIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
bit RBIE @ ((unsigned)&INTCON*8)+3;

bit RABIE @ ((unsigned)&INTCON*8)+3;
bit INTE @ ((unsigned)&INTCON*8)+4;
bit T0IE @ ((unsigned)&INTCON*8)+5;
bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;


volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;


volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
volatile bit ULPWUIF @ ((unsigned)&PIR2*8)+2;
volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;
volatile bit OSFIF @ ((unsigned)&PIR2*8)+7;


bit TMR1ON @ ((unsigned)&T1CON*8)+0;
bit TMR1CS @ ((unsigned)&T1CON*8)+1;
bit T1SYNC @ ((unsigned)&T1CON*8)+2;
bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
bit TMR1GE @ ((unsigned)&T1CON*8)+6;
bit T1GINV @ ((unsigned)&T1CON*8)+7;


bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
bit TMR2ON @ ((unsigned)&T2CON*8)+2;
bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;


bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
bit SSPM3 @ ((unsigned)&SSPCON*8)+3;
bit CKP @ ((unsigned)&SSPCON*8)+4;
bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;


bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
bit P1M1 @ ((unsigned)&CCP1CON*8)+7;


volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
bit ADDEN @ ((unsigned)&RCSTA*8)+3;
bit CREN @ ((unsigned)&RCSTA*8)+4;
bit SREN @ ((unsigned)&RCSTA*8)+5;
bit RX9 @ ((unsigned)&RCSTA*8)+6;
bit SPEN @ ((unsigned)&RCSTA*8)+7;


bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
volatile bit CCP2Y @ ((unsigned)&CCP2CON*8)+4;
volatile bit CCP2X @ ((unsigned)&CCP2CON*8)+5;


bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
bit CHS0 @ ((unsigned)&ADCON0*8)+2;
bit CHS1 @ ((unsigned)&ADCON0*8)+3;
bit CHS2 @ ((unsigned)&ADCON0*8)+4;
bit CHS3 @ ((unsigned)&ADCON0*8)+5;
bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
bit ADCS1 @ ((unsigned)&ADCON0*8)+7;


bit PS0 @ ((unsigned)&OPTION*8)+0;
bit PS1 @ ((unsigned)&OPTION*8)+1;
bit PS2 @ ((unsigned)&OPTION*8)+2;
bit PSA @ ((unsigned)&OPTION*8)+3;
bit T0SE @ ((unsigned)&OPTION*8)+4;
bit T0CS @ ((unsigned)&OPTION*8)+5;
bit INTEDG @ ((unsigned)&OPTION*8)+6;
bit RBPU @ ((unsigned)&OPTION*8)+7;

bit RABPU @ ((unsigned)&OPTION*8)+7;


bit TRISA0 @ ((unsigned)&TRISA*8)+0;
bit TRISA1 @ ((unsigned)&TRISA*8)+1;
bit TRISA2 @ ((unsigned)&TRISA*8)+2;
bit TRISA3 @ ((unsigned)&TRISA*8)+3;
bit TRISA4 @ ((unsigned)&TRISA*8)+4;
bit TRISA5 @ ((unsigned)&TRISA*8)+5;
bit TRISA6 @ ((unsigned)&TRISA*8)+6;
bit TRISA7 @ ((unsigned)&TRISA*8)+7;


volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;


volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;

# 317
volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;


bit TMR1IE @ ((unsigned)&PIE1*8)+0;
bit TMR2IE @ ((unsigned)&PIE1*8)+1;
bit CCP1IE @ ((unsigned)&PIE1*8)+2;
bit SSPIE @ ((unsigned)&PIE1*8)+3;
bit TXIE @ ((unsigned)&PIE1*8)+4;
bit RCIE @ ((unsigned)&PIE1*8)+5;
bit ADIE @ ((unsigned)&PIE1*8)+6;


bit CCP2IE @ ((unsigned)&PIE2*8)+0;
bit ULPWUIE @ ((unsigned)&PIE2*8)+2;
bit BCLIE @ ((unsigned)&PIE2*8)+3;
bit EEIE @ ((unsigned)&PIE2*8)+4;
bit C1IE @ ((unsigned)&PIE2*8)+5;
bit C2IE @ ((unsigned)&PIE2*8)+6;
bit OSFIE @ ((unsigned)&PIE2*8)+7;


volatile bit BOR @ ((unsigned)&PCON*8)+0;
volatile bit POR @ ((unsigned)&PCON*8)+1;
bit SBOREN @ ((unsigned)&PCON*8)+4;
bit ULPWUE @ ((unsigned)&PCON*8)+5;


bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
bit IRCF2 @ ((unsigned)&OSCCON*8)+6;


bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;


bit SEN @ ((unsigned)&SSPCON2*8)+0;
volatile bit RSEN @ ((unsigned)&SSPCON2*8)+1;
volatile bit PEN @ ((unsigned)&SSPCON2*8)+2;
volatile bit RCEN @ ((unsigned)&SSPCON2*8)+3;
volatile bit ACKEN @ ((unsigned)&SSPCON2*8)+4;
volatile bit ACKDT @ ((unsigned)&SSPCON2*8)+5;
volatile bit ACKSTAT @ ((unsigned)&SSPCON2*8)+6;
bit GCEN @ ((unsigned)&SSPCON2*8)+7;


volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit RW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit DA @ ((unsigned)&SSPSTAT*8)+5;
bit CKE @ ((unsigned)&SSPSTAT*8)+6;
bit SMP @ ((unsigned)&SSPSTAT*8)+7;


bit WPUB0 @ ((unsigned)&WPUB*8)+0;
bit WPUB1 @ ((unsigned)&WPUB*8)+1;
bit WPUB2 @ ((unsigned)&WPUB*8)+2;
bit WPUB3 @ ((unsigned)&WPUB*8)+3;
bit WPUB4 @ ((unsigned)&WPUB*8)+4;
bit WPUB5 @ ((unsigned)&WPUB*8)+5;
bit WPUB6 @ ((unsigned)&WPUB*8)+6;
bit WPUB7 @ ((unsigned)&WPUB*8)+7;


bit IOCB0 @ ((unsigned)&IOCB*8)+0;
bit IOCB1 @ ((unsigned)&IOCB*8)+1;
bit IOCB2 @ ((unsigned)&IOCB*8)+2;
bit IOCB3 @ ((unsigned)&IOCB*8)+3;
bit IOCB4 @ ((unsigned)&IOCB*8)+4;
bit IOCB5 @ ((unsigned)&IOCB*8)+5;
bit IOCB6 @ ((unsigned)&IOCB*8)+6;
bit IOCB7 @ ((unsigned)&IOCB*8)+7;


bit VR0 @ ((unsigned)&VRCON*8)+0;
bit VR1 @ ((unsigned)&VRCON*8)+1;
bit VR2 @ ((unsigned)&VRCON*8)+2;
bit VR3 @ ((unsigned)&VRCON*8)+3;
bit VRSS @ ((unsigned)&VRCON*8)+4;
bit VRR @ ((unsigned)&VRCON*8)+5;
bit VROE @ ((unsigned)&VRCON*8)+6;
bit VREN @ ((unsigned)&VRCON*8)+7;


volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
bit BRGH @ ((unsigned)&TXSTA*8)+2;
bit SENDB @ ((unsigned)&TXSTA*8)+3;
bit SYNC @ ((unsigned)&TXSTA*8)+4;
bit TXEN @ ((unsigned)&TXSTA*8)+5;
bit TX9 @ ((unsigned)&TXSTA*8)+6;
bit CSRC @ ((unsigned)&TXSTA*8)+7;


bit BRG0 @ ((unsigned)&SPBRG*8)+0;
bit BRG1 @ ((unsigned)&SPBRG*8)+1;
bit BRG2 @ ((unsigned)&SPBRG*8)+2;
bit BRG3 @ ((unsigned)&SPBRG*8)+3;
bit BRG4 @ ((unsigned)&SPBRG*8)+4;
bit BRG5 @ ((unsigned)&SPBRG*8)+5;
bit BRG6 @ ((unsigned)&SPBRG*8)+6;
bit BRG7 @ ((unsigned)&SPBRG*8)+7;


bit BRG8 @ ((unsigned)&SPBRGH*8)+0;
bit BRG9 @ ((unsigned)&SPBRGH*8)+1;
bit BRG10 @ ((unsigned)&SPBRGH*8)+2;
bit BRG11 @ ((unsigned)&SPBRGH*8)+3;
bit BRG12 @ ((unsigned)&SPBRGH*8)+4;
bit BRG13 @ ((unsigned)&SPBRGH*8)+5;
bit BRG14 @ ((unsigned)&SPBRGH*8)+6;
bit BRG15 @ ((unsigned)&SPBRGH*8)+7;


volatile bit PDC0 @ ((unsigned)&PWM1CON*8)+0;
volatile bit PDC1 @ ((unsigned)&PWM1CON*8)+1;
volatile bit PDC2 @ ((unsigned)&PWM1CON*8)+2;
volatile bit PDC3 @ ((unsigned)&PWM1CON*8)+3;
volatile bit PDC4 @ ((unsigned)&PWM1CON*8)+4;
volatile bit PDC5 @ ((unsigned)&PWM1CON*8)+5;
volatile bit PDC6 @ ((unsigned)&PWM1CON*8)+6;
volatile bit PRSEN @ ((unsigned)&PWM1CON*8)+7;


bit PSSBD0 @ ((unsigned)&ECCPAS*8)+0;
bit PSSBD1 @ ((unsigned)&ECCPAS*8)+1;
bit PSSAC0 @ ((unsigned)&ECCPAS*8)+2;
bit PSSAC1 @ ((unsigned)&ECCPAS*8)+3;
bit ECCPAS0 @ ((unsigned)&ECCPAS*8)+4;
bit ECCPAS1 @ ((unsigned)&ECCPAS*8)+5;
bit ECCPAS2 @ ((unsigned)&ECCPAS*8)+6;
volatile bit ECCPASE @ ((unsigned)&ECCPAS*8)+7;


volatile bit STRA @ ((unsigned)&PSTRCON*8)+0;
volatile bit STRB @ ((unsigned)&PSTRCON*8)+1;
volatile bit STRC @ ((unsigned)&PSTRCON*8)+2;
volatile bit STRD @ ((unsigned)&PSTRCON*8)+3;
volatile bit STRSYNC @ ((unsigned)&PSTRCON*8)+4;


bit VCFG0 @ ((unsigned)&ADCON1*8)+4;
bit VCFG1 @ ((unsigned)&ADCON1*8)+5;
bit ADFM @ ((unsigned)&ADCON1*8)+7;


bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;


bit C1CH0 @ ((unsigned)&CM1CON0*8)+0;
bit C1CH1 @ ((unsigned)&CM1CON0*8)+1;
bit C1R @ ((unsigned)&CM1CON0*8)+2;
bit C1POL @ ((unsigned)&CM1CON0*8)+4;
bit C1OE @ ((unsigned)&CM1CON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CM1CON0*8)+6;
bit C1ON @ ((unsigned)&CM1CON0*8)+7;


bit C2CH0 @ ((unsigned)&CM2CON0*8)+0;
bit C2CH1 @ ((unsigned)&CM2CON0*8)+1;
bit C2R @ ((unsigned)&CM2CON0*8)+2;
bit C2POL @ ((unsigned)&CM2CON0*8)+4;
bit C2OE @ ((unsigned)&CM2CON0*8)+5;
volatile bit C2OUT @ ((unsigned)&CM2CON0*8)+6;
bit C2ON @ ((unsigned)&CM2CON0*8)+7;


bit C2SYNC @ ((unsigned)&CM2CON1*8)+0;
bit T1GSS @ ((unsigned)&CM2CON1*8)+1;
bit C2RSEL @ ((unsigned)&CM2CON1*8)+4;
bit C1RSEL @ ((unsigned)&CM2CON1*8)+5;
volatile bit MC2OUT @ ((unsigned)&CM2CON1*8)+6;
volatile bit MC1OUT @ ((unsigned)&CM2CON1*8)+7;


bit FVREN @ ((unsigned)&SRCON*8)+0;
volatile bit PULSR @ ((unsigned)&SRCON*8)+2;
volatile bit PULSS @ ((unsigned)&SRCON*8)+3;
bit C2REN @ ((unsigned)&SRCON*8)+4;
bit C1SEN @ ((unsigned)&SRCON*8)+5;
bit SR0 @ ((unsigned)&SRCON*8)+6;
bit SR1 @ ((unsigned)&SRCON*8)+7;


volatile bit ABDEN @ ((unsigned)&BAUDCTL*8)+0;
volatile bit WUE @ ((unsigned)&BAUDCTL*8)+1;
bit BRG16 @ ((unsigned)&BAUDCTL*8)+3;
volatile bit SCKP @ ((unsigned)&BAUDCTL*8)+4;
volatile bit RCIDL @ ((unsigned)&BAUDCTL*8)+6;
volatile bit ABDOVF @ ((unsigned)&BAUDCTL*8)+7;


bit ANS0 @ ((unsigned)&ANSEL*8)+0;
bit ANS1 @ ((unsigned)&ANSEL*8)+1;
bit ANS2 @ ((unsigned)&ANSEL*8)+2;
bit ANS3 @ ((unsigned)&ANSEL*8)+3;
bit ANS4 @ ((unsigned)&ANSEL*8)+4;

# 534
bit ANS8 @ ((unsigned)&ANSELH*8)+0;
bit ANS9 @ ((unsigned)&ANSELH*8)+1;
bit ANS10 @ ((unsigned)&ANSELH*8)+2;
bit ANS11 @ ((unsigned)&ANSELH*8)+3;
bit ANS12 @ ((unsigned)&ANSELH*8)+4;
bit ANS13 @ ((unsigned)&ANSELH*8)+5;


volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;

# 392 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\pic.h"
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 465 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 12 "F:\fgr\16gb\0000 interior\deTmp11\sw\cic\0000 cic\t0_setupUser.h"
typedef unsigned char type_t0Size;
typedef const type_t0Size type_t0DelayConstant;

# 12 "F:\fgr\16gb\0000 interior\deTmp11\sw\cic\0000 cic\t0_aliases.h"
enum e_t0
{
T0_TESTDISPLAY,
T0_MENU_RETURN,
T0_PULSADO_LARGO_HOLD,
T0_PULSADO_LARGO_SILENT,
T0_D7SM_SCROLL,
T0_CANT
};

# 28 "F:\fgr\16gb\libSwPic\libSwPic\timer0\20220922 2300\t0.h"
typedef struct
{
type_t0Size prescaler;
unsigned char loop:1;
unsigned char flag:1;
unsigned char pause:1;
}t_t0;

# 40
extern t_t0 t0Mem[T0_CANT];
extern type_t0DelayConstant t0DelayConstant[T0_CANT];

# 83
void t0Driver(char i);

# 16 "F:\fgr\16gb\0000 interior\deTmp11\sw\cic\0000 cic\tmp_11.h"
enum e_text_mainMenu_ix
{
TEXT__M0__FIRST,
TEXT__M0__INPUT,
TEXT__M0__NMEM,


TEXT__M0__CANT
};

# 30
const char *menu_text_main[]=
{
"FIRSt",
"FUNCION ENtRAdA",
"CANtIdAd tIEMPOS",


};

# 57
enum e_m0_input
{
M0_INPUT_NADA,
M0_INPUT_PAUSE_ON,
M0_INPUT_PAUSE_OFF,
M0_INPUT_FUERZA,
M0_INPUT_DISABLE,
M0_INPUT_CANT
};

# 74
typedef struct
{
unsigned char flag_showTimerId:1;

unsigned char flag_showHyphens:1;


unsigned char flag_locked:1;
unsigned char flag_inputSettingLedBlink:1;

unsigned char flag_outForce:1;

unsigned char flag_outForceVal:1;
unsigned char flag_showTimeBlink:1;




unsigned char mem_input:3;

unsigned char mem_visor_parpadeo:1;
unsigned char mem_first:1;

unsigned char mem_cantMemorias;


char mainMenuState;

char menuCharAuxiliar;

short long menuShortLongAuxiliar;


char configSetting;

char p2eepromAddr;


char str[4];
}t_temporizador;




extern t_temporizador tmp_11;
extern char bitTitila;

# 125
void tmp_11_test_display(void);
void tmp_11_init(void);
void tmp_11_driver(void);
void tmp_11_action(char new_event);
char tmp_11_get_event(void);
short long delay_constant_hhmmss(char hh,char mm,char ss);
void returnToIdle(void);
void ucharToStr(unsigned char num,char *str,char strLen);

# 40 "F:\fgr\16gb\0000 interior\deTmp11\sw\cic\0000 cic\d7sm_setupUser.h"
typedef struct
{
char *str;
char strOffs;
char strLen;
char mux_state;
char d0_titila:1;
char d1_titila:1;
char d2_titila:1;
char d3_titila:1;
char d0_dp:1;
char d1_dp:1;
char d2_dp:1;
char d3_dp:1;
}t_disp7segMux;

# 328 "F:\fgr\16gb\libSwPic\libSwPic\disp7segMux\20220922\d7sm.h"
typedef struct
{




char *str;



char strOffs;




char strLen;

char mux_state;



char d0_titila:1; char d1_titila:1; char d2_titila:1; char d3_titila:1;  
char d0_dp:1; char d1_dp:1; char d2_dp:1; char d3_dp:1;  
}t_d7sm;

# 357
extern t_d7sm disp;
extern char d7sm_buffer[];

# 416
void d7sm_char2pins(char c);
void d7sm_scroll_constString(const char *string);
void d7sm_puts_scroll(char *string);
void d7sm_set_88xx(char nTitila, unsigned char number, const char *unitText);
void d7sm_set_number(char nTitila, unsigned char number);
void d7sm_printf(char *fmt, ...);

# 185 "F:\fgr\16gb\0000 interior\deTmp11\sw\cic\0000 cic\system.h"
void systemInit(void);

# 4 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\stdlib.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 16
extern int errno;

# 27
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 31 "C:\Program Files (x86)\HI-TECH Software\PICC\9.70\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 45 "F:\fgr\16gb\libSwPic\libSwPic\disp7segMux\20220922\d7sm.c"
t_d7sm disp=
{
d7sm_buffer,
4,
4,
0,
0,
0,
0,
0,
1,
1,
1,
1
};

# 67
char d7sm_buffer[8]={'8','8','8','8'};

# 75
void d7sm_char2pins(char c)
{
RC2=1;
switch(c)
{
case '-': { RA5=1; RA7=1; RC3=1; RA6=1; RC4=1; RC6=1; RC5=0; }; break;

case '_': { RA5=1; RA7=1; RC3=1; RA6=0; RC4=1; RC6=1; RC5=1; }; break;

case 'O':
case '0': { RA5=0; RA7=0; RC3=0; RA6=0; RC4=0; RC6=0; RC5=1; }; break;

case 'l':
case 'I':
case '1': { RA5=1; RA7=0; RC3=0; RA6=1; RC4=1; RC6=1; RC5=1; }; break;

case '2': { RA5=0; RA7=0; RC3=1; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case '3': { RA5=0; RA7=0; RC3=0; RA6=0; RC4=1; RC6=1; RC5=0; }; break;

case '4': { RA5=1; RA7=0; RC3=0; RA6=1; RC4=1; RC6=0; RC5=0; }; break;

case '5': { RA5=0; RA7=1; RC3=0; RA6=0; RC4=1; RC6=0; RC5=0; }; break;

case 'G':
case '6': { RA5=0; RA7=1; RC3=0; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case '7': { RA5=0; RA7=0; RC3=0; RA6=1; RC4=1; RC6=0; RC5=1; }; break;

case '8': { RA5=0; RA7=0; RC3=0; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case 'g':
case '9': { RA5=0; RA7=0; RC3=0; RA6=0; RC4=1; RC6=0; RC5=0; }; break;

case 'a': { RA5=0; RA7=0; RC3=0; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case 'A': { RA5=0; RA7=0; RC3=0; RA6=1; RC4=0; RC6=0; RC5=0; }; break;

case 'b': { RA5=1; RA7=1; RC3=0; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case 'c': { RA5=1; RA7=1; RC3=1; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case 'C': { RA5=0; RA7=1; RC3=1; RA6=0; RC4=0; RC6=0; RC5=1; }; break;

case 'D':
case 'd': { RA5=1; RA7=0; RC3=0; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case 'o': { RA5=1; RA7=1; RC3=0; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case 'e': { RA5=0; RA7=0; RC3=1; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case 'E': { RA5=0; RA7=1; RC3=1; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case 'f':
case 'F': { RA5=0; RA7=1; RC3=1; RA6=1; RC4=0; RC6=0; RC5=0; }; break;

case 'H': { RA5=1; RA7=0; RC3=0; RA6=1; RC4=0; RC6=0; RC5=0; }; break;

case 'h': { RA5=1; RA7=1; RC3=0; RA6=1; RC4=0; RC6=0; RC5=0; }; break;

case 'i': { RA5=1; RA7=1; RC3=0; RA6=1; RC4=1; RC6=1; RC5=1; }; break;

case 'J': { RA5=1; RA7=0; RC3=0; RA6=0; RC4=0; RC6=1; RC5=1; }; break;

case 'L': { RA5=1; RA7=1; RC3=1; RA6=0; RC4=0; RC6=0; RC5=1; }; break;

case 'm':
case 'n': { RA5=1; RA7=1; RC3=0; RA6=1; RC4=0; RC6=1; RC5=0; }; break;

case 'M':
case 'N': { RA5=0; RA7=0; RC3=0; RA6=1; RC4=0; RC6=0; RC5=1; }; break;

case 'P':
case 'p': { RA5=0; RA7=0; RC3=1; RA6=1; RC4=0; RC6=0; RC5=0; }; break;

case 'q': { RA5=0; RA7=0; RC3=0; RA6=1; RC4=1; RC6=0; RC5=0; }; break;

case 'r': { RA5=1; RA7=1; RC3=1; RA6=1; RC4=0; RC6=1; RC5=0; }; break;

case 'R': { RA5=0; RA7=1; RC3=1; RA6=1; RC4=0; RC6=0; RC5=1; }; break;

case 's':
case 'S': { RA5=0; RA7=1; RC3=0; RA6=0; RC4=1; RC6=0; RC5=0; }; break;

case 'T':
case 't': { RA5=1; RA7=1; RC3=1; RA6=0; RC4=0; RC6=0; RC5=0; }; break;

case 'v':
case 'u': { RA5=1; RA7=1; RC3=0; RA6=0; RC4=0; RC6=1; RC5=1; }; break;

case 'U': { RA5=1; RA7=0; RC3=0; RA6=0; RC4=0; RC6=0; RC5=1; }; break;

case 'y':
case 'Y': { RA5=1; RA7=0; RC3=0; RA6=0; RC4=1; RC6=0; RC5=0; }; break;

case 'Z': { RA5=0; RA7=0; RC3=1; RA6=0; RC4=0; RC6=1; RC5=0; }; break;

case '#': { RA5=0; RA7=1; RC3=1; RA6=0; RC4=1; RC6=1; RC5=0; }; break;

default: { RA5=1; RA7=1; RC3=1; RA6=1; RC4=1; RC6=1; RC5=1; }; break;
}
}

# 187
void d7sm_puts_scroll(char *string)
{

{ t0Mem[T0_D7SM_SCROLL].flag=0; t0Mem[T0_D7SM_SCROLL].prescaler=t0DelayConstant[T0_D7SM_SCROLL]; t0Mem[T0_D7SM_SCROLL].pause=0; t0Mem[T0_D7SM_SCROLL].loop=1; };
disp.strOffs=0;
disp.str=string;

char *s=string, stringStrlen; while(*s) s++; stringStrlen=(int)s-(int)string;;
disp.strLen=stringStrlen;

{ disp.d0_titila=0;; disp.d1_titila=0;; disp.d2_titila=0;; disp.d3_titila=0;; {}; {}; };
{ disp.d0_dp=0;; disp.d1_dp=0;; disp.d2_dp=0;; disp.d3_dp=0;; {}; {}; };
}

# 211
void d7sm_set_88xx(char nTitila, unsigned char number,
const char* unitText)
{
char i, *str=&d7sm_buffer[0];

{ t0Mem[T0_D7SM_SCROLL].prescaler=0; t0Mem[T0_D7SM_SCROLL].pause=1; t0Mem[T0_D7SM_SCROLL].loop=0; };
disp.strOffs=4;
disp.strLen=4;



{ char i,n=number,*s=str; s+=2-1; for(i=0;i<2;i++) { *(s--)='0'+(n%10); n/=10; } };

d7sm_buffer[2]=unitText[0];
d7sm_buffer[3]=unitText[1];
disp.str=d7sm_buffer;

switch(nTitila)
{
case 0:
disp.d0_titila=0;
disp.d1_titila=0;
disp.d2_titila=1;
disp.d3_titila=0;
break;
case 1:
disp.d0_titila=0;
disp.d1_titila=0;
disp.d2_titila=0;
disp.d3_titila=1;
break;
}
}

# 249
void d7sm_set_number(char nTitila,unsigned char number)
{
{ t0Mem[T0_D7SM_SCROLL].prescaler=0; t0Mem[T0_D7SM_SCROLL].pause=1; t0Mem[T0_D7SM_SCROLL].loop=0; };
disp.strOffs=4;
disp.strLen=4;

char *str=&d7sm_buffer[0];
{ char i,n=number,*s=str; s+=4-1; for(i=0;i<4;i++) { *(s--)='0'+(n%10); n/=10; } };


disp.str=d7sm_buffer;

disp.d0_titila=nTitila;
disp.d1_titila=nTitila;
disp.d2_titila=nTitila;
disp.d3_titila=nTitila;
}

# 284
void d7sm_printf(char *fmt, ...)
{
va_list ap;


char i=0;


{ disp.d0_dp=0;; disp.d1_dp=0;; disp.d2_dp=0;; disp.d3_dp=0;; {}; {}; };
{ disp.d0_titila=0;; disp.d1_titila=0;; disp.d2_titila=0;; disp.d3_titila=0;; {}; {}; };


unsigned uval;
char numLen;


*ap = __va_start();

for(char *p=fmt; *p; p++)
{
if(i>0 && *p=='.')
{
switch(4-i) { case 0: disp.d0_dp=1; break;; case 1: disp.d1_dp=1; break;; case 2: disp.d2_dp=1; break;; case 3: disp.d3_dp=1; break;; {}; {}; default: break; };
}
else if(*p=='%')
{
if(((*(p+1)>='0')?((*(p+1)<='9')?1:0):0)) numLen=*(++p)-'0';

switch(*++p)
{

# 331
case 'u':
uval=(*(unsigned int *)__va_arg((*(unsigned int **)ap), (unsigned int)0));



{ char i,n=uval,*s=&d7sm_buffer[i]; s+=numLen-1; for(i=0;i<numLen;i++) { *(s--)='0'+(n%10); n/=10; } };
i+=numLen;
break;

# 351
}
}
else d7sm_buffer[i++]=*p;
}
;

disp.str=d7sm_buffer;
disp.strOffs=4;
disp.strLen=4;
}
